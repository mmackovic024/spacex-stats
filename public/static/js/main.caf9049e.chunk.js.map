{"version":3,"sources":["components/Legend.js","components/ItemDetails.js","components/ItemList.js","components/ItemQuery.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["Legend","react_default","a","createElement","className","style","margin","fontSize","marginBottom","marginRight","LAUNCH_QUERY","gql","_templateObject","ItemDetails","props","flight_number","id","trigger","lib","waves","small","options","preventScrolling","maxHeight","actions","modal","react_apollo_esm","query","variables","_ref","loading","error","data","size","console","log","_data$launch","launch","mission_name","launch_date_local","site_name_long","launch_site","launch_success","_data$launch$rocket","rocket","rocket_name","rocket_type","details","_data$launch$links","links","wikipedia","mission_patch_small","dist_default","format","href","target","build","src","alt","Item","launches","onLoadMore","map","index","launch_year","key","marginTop","length","es","onEnter","fireOnRapidScroll","bottomOffset","LAUNCHES_QUERY","ItemQuery_templateObject","ItemQuery","Fragment","rel","limit","offset","fetchMore","updateQuery","prev","_ref2","fetchMoreResult","__typename","concat","Object","toConsumableArray","client","ApolloClient","uri","App","logo","width","display","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.caf9049e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Legend() {\r\n  return (\r\n    <div\r\n      className=\"row center-align grey-text\"\r\n      style={{ margin: '1rem 0', fontSize: '1.1rem' }}\r\n    >\r\n      <span className=\"col s12 m4\" style={{ marginBottom: '1rem' }}>\r\n        <span className=\"green-text\" style={{ marginRight: '.4rem' }}>\r\n          &#9608;{''}\r\n        </span>\r\n        = Launch Success\r\n      </span>\r\n      <span className=\"col s12 m4\" style={{ marginBottom: '1rem' }}>\r\n        <span className=\"red-text\" style={{ marginRight: '.4rem' }}>\r\n          &#9608;{''}\r\n        </span>\r\n        = Launch Fail\r\n      </span>\r\n      <span className=\"col s12 m4\" style={{ marginBottom: '1rem' }}>\r\n        <span className=\"blue-text\" style={{ marginRight: '.4rem' }}>\r\n          &#9608;{''}\r\n        </span>\r\n        = Status unavailable\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Modal, Button, Preloader } from 'react-materialize';\r\nimport Moment from 'react-moment';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\n// Query for one launch\r\nconst LAUNCH_QUERY = gql`\r\n  query LaunchQuery($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n      mission_name\r\n      launch_date_local\r\n      launch_site {\r\n        site_name_long\r\n      }\r\n      launch_success\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n      details\r\n      links {\r\n        wikipedia\r\n        mission_patch_small\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function ItemDetails(props) {\r\n  const flight_number = props.id;\r\n  const trigger = (\r\n    <Button waves=\"light\" small className=\"grey darken-2 hoverable\">\r\n      Details\r\n    </Button>\r\n  );\r\n  return (\r\n    <Modal\r\n      trigger={trigger}\r\n      options={{ preventScrolling: false }}\r\n      className=\"grey lighten-2\"\r\n      style={{ maxHeight: '85%' }}\r\n      actions={\r\n        <div className=\"center-align\">\r\n          <Button className=\"grey\" waves=\"light\" modal=\"close\">\r\n            Close\r\n          </Button>\r\n        </div>\r\n      }\r\n    >\r\n      <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\r\n        {({ loading, error, data }) => {\r\n          if (loading)\r\n            return (\r\n              <div className=\"center-align\">\r\n                <Preloader size=\"small\" />\r\n              </div>\r\n            );\r\n          if (error) {\r\n            console.log(error);\r\n            return <h5>Error fetching data</h5>;\r\n          }\r\n          const {\r\n            mission_name,\r\n            launch_date_local,\r\n            launch_site: { site_name_long },\r\n            launch_success,\r\n            rocket: { rocket_name, rocket_type },\r\n            details,\r\n            links: { wikipedia, mission_patch_small }\r\n          } = data.launch;\r\n          return (\r\n            <div>\r\n              <h5>\r\n                <b>Mission: </b>\r\n                {mission_name}\r\n              </h5>\r\n              <b>Launch date: </b>\r\n              <Moment format=\"MMM DD, YYYY\">{launch_date_local}</Moment>\r\n              <br />\r\n              <b>Launch site:</b> {site_name_long}\r\n              <br />\r\n              <b>Launch:</b>{' '}\r\n              {launch_success === null\r\n                ? 'unavailable'\r\n                : launch_success\r\n                ? 'successful'\r\n                : 'failed'}\r\n              <br />\r\n              <b>Rocket name:</b> {rocket_name}\r\n              <br />\r\n              <b>Rocket type:</b> {rocket_type}\r\n              <br />\r\n              <b>Details:</b> {details ? details : 'unavailable'}\r\n              <br />\r\n              <a className=\"truncate\" href={wikipedia} target=\"blank\">\r\n                {wikipedia}\r\n              </a>\r\n              <br />\r\n              {mission_patch_small ? (\r\n                <div className=\"center-align\">\r\n                  <LazyLoadImage\r\n                    className=\"responsive-img\"\r\n                    src={mission_patch_small}\r\n                    alt=\"Mission patch\"\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Query>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Waypoint } from 'react-waypoint';\r\nimport ItemDetails from './ItemDetails';\r\n\r\nexport default function Item({ launches, onLoadMore }) {\r\n  return (\r\n    <div>\r\n      {launches.map((launch, index) => {\r\n        const {\r\n          flight_number,\r\n          mission_name,\r\n          launch_year,\r\n          launch_success\r\n        } = launch;\r\n        return (\r\n          <div\r\n            key={flight_number}\r\n            className=\"grey darken-3 grey-text text-lighten-4 row valign-wrapper\"\r\n          >\r\n            <div className=\"col m9 s8\">\r\n              <h5 style={{ marginTop: '1.5rem' }}>\r\n                Mission:{' '}\r\n                {launch_success === null ? (\r\n                  <span className=\"blue-text\">{mission_name}</span>\r\n                ) : (\r\n                  <span className={launch_success ? 'green-text' : 'red-text'}>\r\n                    {mission_name}\r\n                  </span>\r\n                )}\r\n              </h5>\r\n              <h6 style={{ marginBottom: '1.5rem' }}>Year: {launch_year}</h6>\r\n            </div>\r\n            <div className=\"col m3 s4\">\r\n              <ItemDetails id={flight_number} />\r\n            </div>\r\n            {index === launches.length - 3 && (\r\n              <Waypoint\r\n                onEnter={onLoadMore}\r\n                fireOnRapidScroll={true}\r\n                bottomOffset=\"-600px\"\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Preloader } from 'react-materialize';\r\nimport Legend from './Legend';\r\nimport ItemList from './ItemList';\r\n\r\n// Query for all launches\r\nconst LAUNCHES_QUERY = gql`\r\n  query LaunchesQuery($limit: Int!, $offset: Int!) {\r\n    launches(limit: $limit, offset: $offset) {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_success\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function ItemQuery() {\r\n  return (\r\n    <>\r\n      <h2 className=\"black white-text center-align\">Launches</h2>\r\n      <Legend />\r\n      <h6 className=\"center-align\">\r\n        <a\r\n          href=\"https://github.com/mmackovic024/spacex-stats.git\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Code on GitHub\r\n        </a>\r\n      </h6>\r\n      <br />\r\n      <Query\r\n        query={LAUNCHES_QUERY}\r\n        variables={{\r\n          limit: 10,\r\n          offset: 0\r\n        }}\r\n      >\r\n        {({ loading, error, data, fetchMore }) => {\r\n          if (loading)\r\n            return (\r\n              <div className=\"center-align\">\r\n                <Preloader size=\"small\" />\r\n              </div>\r\n            );\r\n          if (error) console.log(error);\r\n\r\n          return (\r\n            <ItemList\r\n              launches={data.launches || []}\r\n              onLoadMore={() =>\r\n                fetchMore({\r\n                  variables: {\r\n                    offset: data.launches.length\r\n                  },\r\n                  updateQuery: (prev, { fetchMoreResult }) => {\r\n                    if (!fetchMoreResult) return prev;\r\n                    return {\r\n                      __typename: 'Launch',\r\n                      launches: [...prev.launches, ...fetchMoreResult.launches]\r\n                    };\r\n                  }\r\n                })\r\n              }\r\n            />\r\n          );\r\n        }}\r\n      </Query>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport './App.css';\nimport logo from './logo.png';\nimport ItemQuery from './components/ItemQuery';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"container\">\n        <img\n          src={logo}\n          alt=\"SpaceX\"\n          style={{ width: 350, display: 'block', margin: 'auto' }}\n        />\n        <ItemQuery />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.ab10d000.png\";"],"sourceRoot":""}